import UniformTypeIdentifiers

public extension UTType {
    static func allTypes() -> [UTType] {
        let types: [UTType] = [
            .item,
            .content,
            .compositeContent,
            .diskImage,
            .data,
            .directory,
            .resolvable,
            .symbolicLink,
            .executable,
            .mountPoint,
            .aliasFile,
            .urlBookmarkData,
            .url,
            .fileURL,
            .text,
            .plainText,
            .utf8PlainText,
            .utf16ExternalPlainText,
            .utf16PlainText,
            .delimitedText,
            .commaSeparatedText,
            .tabSeparatedText,
            .utf8TabSeparatedText,
            .rtf,
            .html,
            .xml,
            .yaml,
            .sourceCode,
            .assemblyLanguageSource,
            .cSource,
            .objectiveCSource,
            .swiftSource,
            .cPlusPlusSource,
            .objectiveCPlusPlusSource,
            .cHeader,
            .cPlusPlusHeader
        ]
        
        let secondTypes: [UTType] = [
            .script,
            .appleScript,
            .osaScript,
            .osaScriptBundle,
            .javaScript,
            .shellScript,
            .perlScript,
            .pythonScript,
            .rubyScript,
            .phpScript,
            .json,
            .propertyList,
            .xmlPropertyList,
            .binaryPropertyList,
            .pdf,
            .rtfd,
            .flatRTFD,
            .webArchive,
            .image,
            .jpeg,
            .tiff,
            .gif,
            .png,
            .icns,
            .bmp,
            .ico,
            .rawImage,
            .svg,
            .livePhoto,
            .heif,
            .heic,
            .webP,
            .threeDContent,
            .usd,
            .usdz,
            .realityFile,
            .sceneKitScene,
            .arReferenceObject,
            .audiovisualContent
        ]
        
        let thirdTypes: [UTType] = [
            .movie,
            .video,
            .audio,
            .quickTimeMovie,
            UTType("com.apple.quicktime-image"),
            .mpeg,
            .mpeg2Video,
            .mpeg2TransportStream,
            .mp3,
            .mpeg4Movie,
            .mpeg4Audio,
            .appleProtectedMPEG4Audio,
            .appleProtectedMPEG4Video,
            .avi,
            .aiff,
            .wav,
            .midi,
            .playlist,
            .m3uPlaylist,
            .folder,
            .volume,
            .package,
            .bundle,
            .pluginBundle,
            .spotlightImporter,
            .quickLookGenerator,
            .xpcService,
            .framework,
            .application,
            .applicationBundle,
            .applicationExtension,
            .unixExecutable,
            .exe,
            .systemPreferencesPane,
            .archive,
            .gzip,
            .bz2,
            .zip,
            .appleArchive,
            .spreadsheet,
            .presentation,
            .database,
            .message,
            .contact,
            .vCard,
            .toDoItem,
            .calendarEvent,
            .emailMessage,
            .internetLocation,
            .internetShortcut,
            .font,
            .bookmark,
            .pkcs12,
            .x509Certificate,
            .epub,
            .log
        ]
            .compactMap { $0 }
        
        if #available(iOS 15.0, *) {
            return types + secondTypes + thirdTypes + [.makefile]
        } else {
            return types + secondTypes + thirdTypes
        }
    }
}
